import pdfplumber
import pandas as pd
import numpy as np
from dateutil.parser import parse
import os
import datetime 

   
#ESTABELECENDO LISTAS
colunas=['00001', '00009', '00013', '00018', '00039', '00204', '01005', '00210', '00080', '00081', '00253', '00252', '00037', '00077', '00121', '00122', '00123', '00125', '00128', '00129', '00423']


folha= []

#MUDANÇA NO PATH PARA ABERTURA DOS ARQUIVOS.
path=('C:\\Users\\Julio\\Desktop\\Abner\\FOLHA DE PAGAMENTO')
os.chdir(path)
lista=os.listdir(path)


#ABERTURA DE PDF'S PARA LEITURA DE DADOS 
for j in range(1, len(lista)):
     print(lista[j])
     pdf=pdfplumber.open(lista[j])
     page=pdf.pages
     print('PDF=', j)

#LOOP DE LETURA DE CADA PAGINA DA FOLHA DE PAGAMENTO
     for i in range(len(page)):
          text=page[i].extract_text()
          lines=int((text.count('\n')+1)/2)
          linha=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
          print('PAGINA=', i)
#VARIÁVEIS PARA SALVAR
        
          mes_ref= text.split('\n')[1].split(':')[1].split('/')[0]
          linha[0]=mes_ref
          ano_ref=text.split('\n')[1].split(':')[1].split('/')[1]
          linha[1]=ano_ref
          funcionario= text.split('\n')[4].split(' ')[1]+ ' ' + text.split('\n')[4].split(' ')[2]+ ' ' + text.split('\n')[4].split(' ')[3]
          linha[2]=funcionario
          funcao= text.split('\n')[5].split(' ')[0]
          linha[3]=funcao

          gratificacao=None
          adiantamento=None
          sal_norm_dinheiro=None
          dif= None
          sal_norm_dias=None
          hora_extra_50=None
          extra_50_val=None
          insalubridade_p=None
          ajuda_de_custo=None
          inss=None
          irrf_p=None
          seguro_vida=None
          hora_extra_100= None
          valor_extra_DSR=None
          noturnohoras=None
          noturnovalor=None
          faltashoras=None
          faltasvalor=None
          feriasnormais=None
          feriasnormais=None
          intheferias= None
          intadicinsalferias=None
          intadicnoturnoferias=None
          tercoferias=None
          liquidoferiasnormais=None
          reembolso=None
        
          for k in range(7, lines-5):
               print('k=',k)
               info=text.split('\n')[k]
               if colunas[0]in info:
                    sal_norm_dinheiro=info.split(colunas[0])[1].split(' ')[4]
                    print(info.split(colunas[0])[1].split(' ')[3])
                    sal_norm_dias=info.split(colunas[0])[1].split(' ')[3].split('/')[1]
                    linha[4]=sal_norm_dias
                    linha[5]=sal_norm_dinheiro
                    continue
               elif sal_norm_dias==None:
                    sal_norm_dinheiro=0
                    sal_norm_dias=0
                    linha[4]=sal_norm_dias
                    linha[5]=sal_norm_dinheiro

                
               if colunas[1] in info:
                    hora_extra_50= info.split(colunas[1])[1].split(' ')[4]
                    extra_50_val=info.split(colunas[1])[1].split(' ')[5]
                    linha[6]=hora_extra_50
                    linha[7]=extra_50_val
                    continue
               elif hora_extra_50 ==None:
                    hora_extra_50= 0
                    extra_50_val=0
                    linha[6]=hora_extra_50
                    linha[7]=extra_50_val

                
               if colunas[2] in info:
                    hora_extra_100= info.split(colunas[2])[1].split(' ')[4]
                    extra_100_val=info.split(colunas[2])[1].split(' ')[5]
                    linha[8]=hora_extra_100
                    linha[9]=extra_100_val
                    continue
               elif hora_extra_100==None:
                    hora_extra_100= 0
                    extra_100_val=0
                    linha[8]=hora_extra_100
                    linha[9]=extra_100_val

                
               if colunas[3] in info:
                    extra_integracao_DSR= info.split(colunas[3])[1].split(' ')[6]
                    valor_extra_DSR=info.split(colunas[3])[1].split(' ')[7]
                    linha[10]=extra_integracao_DSR
                    linha[11]=valor_extra_DSR
                    continue
               elif valor_extra_DSR==None:
                    extra_integracao_DSR= 0
                    valor_extra_DSR=0
                    linha[10]=extra_integracao_DSR
                    linha[11]=valor_extra_DSR
                
                
               if colunas[4] in info:
                    insalubridade_p=info.split(colunas[4])[1].split(' ')[4]
                    valor_insalubridade=info.split(colunas[4])[1].split(' ')[5]
                    linha[12]=insalubridade_p
                    linha[13]=valor_insalubridade
                    continue
               elif insalubridade_p==None:
                    insalubridade_p=0
                    valor_insalubridade=0
                    linha[12]=insalubridade_p
                    linha[13]=valor_insalubridade
                
                
               if colunas[5] in info:
                    gratificacao=info.split(colunas[5])[1].split(' ')[2]
                    linha[14]=gratificacao
                    continue
               elif gratificacao==None:
                    gratificacao=0
                    linha[14]=gratificacao

                 
               if colunas[6] in info:
                    dif=info.split(colunas[6])[1].split(' ')[3]
                    linha[15]=dif
                    continue
               elif dif==None:
                    dif=0
                    linha[15]=dif

                 
               if colunas[7] in info:
                    ajuda_de_custo=info.split(colunas[7])[1].split(' ')[6]
                    linha[16]=ajuda_de_custo
                    continue
               elif ajuda_de_custo==None:
                    ajuda_de_custo=0
                    linha[16]=ajuda_de_custo

                
               if colunas[8] in info:
                    inss=info.split(colunas[8])[1].split(' ')[3]
                    linha[17]=inss
                    continue
               elif inss==None:
                    inss=0
                    linha[17]=inss

                
               if colunas[9] in info:
                    irrf_p=info.split(colunas[9])[1].split(' ')[3]
                    irrf_valor=info.split(colunas[9])[1].split(' ')[4]
                    linha[18]=irrf_p
                    linha[19]=irrf_valor
                    continue
               elif irrf_p==None:
                    irrf_p=0
                    irrf_valor=0
                    linha[18]=irrf_p
                    linha[19]=irrf_valor

                
               if colunas[11] in info:
                    adiantamento=info.split(colunas[11])[1].split(' ')[4]
                    linha[20]=adiantamento
                    continue
               elif adiantamento==None:
                    adiantamento=0
                    linha[20]=adiantamento
                
                
               if colunas[10] in info:
                    seguro_vida=info.split(colunas[10])[1].split(' ')[4]
                    linha[21]=seguro_vida
                    continue
               elif seguro_vida==None:
                    seguro_vida=0
                    linha[21]=seguro_vida

               if colunas[12] in info:
                    noturnohoras=info.split(colunas[12])[1].split(' ')[3]
                    noturnovalor=info.split(colunas[12])[1].split(' ')[4]
                    linha[31]=noturnohoras
                    linha[32]=noturnovalor
                    continue
               elif noturnohoras==None:
                    noturnohoras=0
                    noturnovalor=0
                    linha[31]=noturnohoras
                    linha[32]=noturnovalor

               if colunas[13] in info:
                    faltashoras=info.split(colunas[13])[1].split(' ')[4]
                    faltasnovalor=info.split(colunas[13])[1].split(' ')[5]
                    linha[33]=faltashoras
                    linha[34]=faltasnovalor
                    continue
               elif faltashoras==None:
                    faltashoras=0
                    faltasvalor=0
                    linha[33]=faltashoras
                    linha[34]=faltasvalor

               if colunas[14] in info:
                    feriasnormais=info.split(colunas[14])[1].split(' ')[3]
                    linha[35]=feriasnormais
                    continue
               elif feriasnormais==None:
                    feriasnormais=0
                    linha[35]=feriasnormais

               if colunas[15] in info:
                    intheferias=info.split(colunas[15])[1].split(' ')[4]
                    linha[36]=intheferias
                    continue
               elif intheferias==None:
                    intheferias=0
                    linha[36]=intheferias

               if colunas[16] in info:
                    intadicinsalferias=info.split(colunas[16])[1].split(' ')[5]
                    linha[37]=intadicinsalferias
                    continue
               elif intadicinsalferias==None:
                    intadicinsalferias=0
                    linha[37]=intadicinsalferias

               if colunas[17] in info:
                    intadicnoturnoferias=info.split(colunas[17])[1].split(' ')[5]
                    linha[38]=intadicnoturnoferias
                    continue
               elif intadicnoturnoferias==None:
                    intadicnoturnoferias=0
                    linha[38]=intadicnoturnoferias

               if colunas[18] in info:
                    tercoferias=info.split(colunas[18])[1].split(' ')[4]
                    linha[39]=tercoferias
                    continue
               elif tercoferias==None:
                    tercoferias=0
                    linha[39]=tercoferias

               if colunas[19] in info:
                    liquidoferiasnormais=info.split(colunas[19])[1].split(' ')[4]
                    linha[40]=liquidoferiasnormais
                    continue
               elif liquidoferiasnormais==None:
                    liquidoferiasnormais=0
                    
                    linha[40]=liquidoferiasnormais

               if colunas[20] in info:
                    reembolso=info.split(colunas[20])[1].split(' ')[4]
                    linha[41]=reembolso
                    continue
               elif reembolso==None:
                    reembolso=0
                    linha[41]=reembolso
        
          total_vencimentos=text.split('\n')[lines-4].split(' ')[0]
          linha[22]=total_vencimentos
          total_descontos=text.split('\n')[lines-4].split(' ')[1]
          linha[23]=total_descontos
          total_liquido=text.split('\n')[-3].split(' ')[2]
          linha[24]=total_liquido
          salario_base=text.split('\n')[lines-1].split(' ')[0]
          linha[25]=salario_base
          sal_cantr_inss=text.split('\n')[lines-1].split(' ')[1]
          linha[26]=sal_cantr_inss
          base_fgts=text.split('\n')[lines-1].split(' ')[2]
          linha[27]=base_fgts
          fgts=text.split('\n')[lines-1].split(' ')[3]
          linha[28]=fgts
          base_irrf=text.split('\n')[lines-1].split(' ')[4]
          linha[29]=base_irrf
          faixa_irrf=text.split('\n')[lines-1].split(' ')[5]
          linha[30]=faixa_irrf

          folha.append(linha)
     
    
dataframe=pd.DataFrame(folha, columns=['Mês de Referência','Ano Referênca', 'Colaborador', 'Função', 'Dias Trabalho Normal', 'Salario Normal', 'Hora Extra 50%', 'Extra 50%', 'Hora Extra 100%', 'Extra 100%', 'Extra DSR (Integração)', 'Extra DSR', '% Insalubridade', 'Val. Insalubridade', 'Gratificação', 'DIF SALARIAL','Ajuda de Custo', 'INSS', '%IRRF', 'Val. IRRF', 'Adiantamento', 'Seguro de Vida', 'Total Vencimentos', 'Total Descontos', 'Total Líquido', 'Salário Base', 'Sal. Contr INSS', 'Base FGTS', 'FGTS', 'Base IRRF', 'Faixa IRRF', 'Add. Noturno Horas', 'Add Noturno Valor', 'Faltas Horas', 'Faltas Valor', 'Ferias Normais', 'INT.HE.FERIAS', 'INT. ADIC. INSAL. FERIAS', 'INT. ADIC. NOTURNO FERIAS', 'ADICIONAL 1/3 S/FERIAS', 'LIQUIDO FERIAS NORMAIS', 'Reembolso'])
print(dataframe)
#SALVA DATAFRAME COMO PLANILHA NA PASTA ABNER#
os.chdir('C:\\Users\\Julio\\Desktop\\Abner\\planilhas')
dataframe.to_excel('FOLHA.xlsx')

